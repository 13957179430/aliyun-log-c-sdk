/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: log_logstore.proto */

#ifndef PROTOBUF_C_log_5flogstore_2eproto__INCLUDED
#define PROTOBUF_C_log_5flogstore_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Log Log;
typedef struct _Log__Content Log__Content;
typedef struct _LogTag LogTag;
typedef struct _LogGroup LogGroup;


/* --- enums --- */


/* --- messages --- */

struct  _Log__Content
{
  ProtobufCMessage base;
  char *key;
  char *value;
};
#define LOG__CONTENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&log__content__descriptor) \
    , NULL, NULL }


struct  _Log
{
  ProtobufCMessage base;
  /*
   * UNIX Time Format
   */
  uint32_t time;
  size_t n_contents;
  Log__Content **contents;
};
#define LOG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&log__descriptor) \
    , 0, 0,NULL }


struct  _LogTag
{
  ProtobufCMessage base;
  char *key;
  char *value;
};
#define LOG_TAG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&log_tag__descriptor) \
    , NULL, NULL }


struct  _LogGroup
{
  ProtobufCMessage base;
  size_t n_logs;
  Log **logs;
  char *category;
  char *topic;
  char *source;
  char *machineuuid;
  size_t n_logtags;
  LogTag **logtags;
};
#define LOG_GROUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&log_group__descriptor) \
    , 0,NULL, NULL, NULL, NULL, NULL, 0,NULL }


/* Log__Content methods */
void   log__content__init
                     (Log__Content         *message);
/* Log methods */
void   log__init
                     (Log         *message);
size_t log__get_packed_size
                     (const Log   *message);
size_t log__pack
                     (const Log   *message,
                      uint8_t             *out);
size_t log__pack_to_buffer
                     (const Log   *message,
                      ProtobufCBuffer     *buffer);
Log *
       log__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   log__free_unpacked
                     (Log *message,
                      ProtobufCAllocator *allocator);
/* LogTag methods */
void   log_tag__init
                     (LogTag         *message);
size_t log_tag__get_packed_size
                     (const LogTag   *message);
size_t log_tag__pack
                     (const LogTag   *message,
                      uint8_t             *out);
size_t log_tag__pack_to_buffer
                     (const LogTag   *message,
                      ProtobufCBuffer     *buffer);
LogTag *
       log_tag__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   log_tag__free_unpacked
                     (LogTag *message,
                      ProtobufCAllocator *allocator);
/* LogGroup methods */
void   log_group__init
                     (LogGroup         *message);
size_t log_group__get_packed_size
                     (const LogGroup   *message);
size_t log_group__pack
                     (const LogGroup   *message,
                      uint8_t             *out);
size_t log_group__pack_to_buffer
                     (const LogGroup   *message,
                      ProtobufCBuffer     *buffer);
LogGroup *
       log_group__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   log_group__free_unpacked
                     (LogGroup *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Log__Content_Closure)
                 (const Log__Content *message,
                  void *closure_data);
typedef void (*Log_Closure)
                 (const Log *message,
                  void *closure_data);
typedef void (*LogTag_Closure)
                 (const LogTag *message,
                  void *closure_data);
typedef void (*LogGroup_Closure)
                 (const LogGroup *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor log__descriptor;
extern const ProtobufCMessageDescriptor log__content__descriptor;
extern const ProtobufCMessageDescriptor log_tag__descriptor;
extern const ProtobufCMessageDescriptor log_group__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_log_5flogstore_2eproto__INCLUDED */
